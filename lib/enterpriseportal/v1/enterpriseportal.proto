syntax = "proto3";

package enterpriseportal.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/sourcegraph/sourcegraph/lib/enterpriseportal/v1";

// EnterprisePortalService is the service API specification for Enterprise Portal.
//
// DRAFT STATE - see RFC 885: https://docs.google.com/document/d/1tiaW1IVKm_YSSYhH-z7Q8sv4HSO_YJ_Uu6eYDjX7uU4/edit#heading=h.tdaxc5h34u7q
service EnterprisePortalService {
  // GetSubscription retrieves an exact match on an Enterprise subscription.
  rpc GetSubscription(GetSubscriptionRequest) returns (GetSubscriptionResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }

  // ListSubscriptions queries for Enterprise subscriptions.
  rpc ListSubscriptions(ListSubscriptionsRequest) returns (ListSubscriptionsResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }

  // ListSubscriptionLicenses queries for Enterprise subscription licenses.
  rpc ListSubscriptionLicenses(ListSubscriptionLicensesRequest) returns (ListSubscriptionLicensesResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }
}

// EnterpriseSubscription represents a Sourcegraph Enterprise subscription.
// It is one of the fundamental elements of the Enterprise Portal service.
message EnterpriseSubscription {
  // ID is the external UUID-format identifier for this subscription.
  string id = 1;
  // When this subscription was created.
  google.protobuf.Timestamp created_at = 2;

  // TODO: more fields from dotcom.graphql.ProductSubscription
}

enum EnterpriseSubscriptionLicenseType {
  SUBSCRIPTION_LICENSE_TYPE_UNSPECIFIED = 0;
  // This license is for a Sourcegraph instance. Each Subscription has exactly
  // one active Sourcegraph Instance license. This is the classic license type.
  SUBSCRIPTION_LICENSE_TYPE_SOURCEGRAPH_INSTANCE = 1;
}

// EnterpriseSubscriptionLicense represents a license for a Sourcegraph
// Enterprise subscription. It is one of the fundamental elements of the
// Enterprise Portal service.
message EnterpriseSubscriptionLicense {
  // ID is the external UUID-format identifier for this license key.
  string id = 1;
  // When this license was created.
  google.protobuf.Timestamp created_at = 2;
  // Type of the license.
  EnterpriseSubscriptionLicenseType license_type = 3;

  // TODO: more fields from dotcom.graphql.ProductLicense
}

message GetSubscriptionRequest {
  // Query specifies the lookup strategy for this get request.
  oneof query {
    // Look up a subscription using its UUID-format identifier.
    string id = 1;
    // Look up a subscription using an associated access token representing
    // this subscription.
    string access_token = 2;
  }
}

message GetSubscriptionResponse {
  EnterpriseSubscription subscription = 1;
}

message ListSubscriptionsRequest {
  // Clients use this field to specify the maximum number of results to be
  // returned by the server. The server may further constrain the maximum number
  // of results returned in a single page. If the page_size is 0, the server
  // will decide the number of results to be returned.
  //
  // See pagination concepts from https://cloud.google.com/apis/design/design_patterns#list_pagination
  int32 page_size = 1;
  // The client uses this field to request a specific page of the list results.
  //
  // See pagination concepts from https://cloud.google.com/apis/design/design_patterns#list_pagination
  string page_token = 2;

  // Query defines the lookup strategy for this list request.
  oneof query {
    // Returns only product subscriptions whose license key contains this
    // substring.
    string license_key_substring = 3;
  }
}

message ListSubscriptionsResponse {
  // This field represents the pagination token to retrieve the next page of
  // results. If the value is "", it means no further results for the request.
  string next_page_token = 1;
  // The list of subscriptions that matched the given query.
  repeated EnterpriseSubscription subscriptions = 2;
}

message ListSubscriptionLicensesRequest {
  // Clients use this field to specify the maximum number of results to be
  // returned by the server. The server may further constrain the maximum number
  // of results returned in a single page. If the page_size is 0, the server
  // will decide the number of results to be returned.
  //
  // See pagination concepts from https://cloud.google.com/apis/design/design_patterns#list_pagination
  int32 page_size = 1;
  // The client uses this field to request a specific page of the list results.
  //
  // See pagination concepts from https://cloud.google.com/apis/design/design_patterns#list_pagination
  string page_token = 2;

  // Query specifies the lookup strategy for this list request.
  oneof query {
    // Returns only product licenses with the given subscription ID.
    string subscription_id = 3;
    // Returns only product subscriptions whose license key contains this
    // substring.
    string license_key_substring = 4;
  }
}

message ListSubscriptionLicensesResponse {
  // This field represents the pagination token to retrieve the next page of
  // results. If the value is "", it means no further results for the request.
  string next_page_token = 1;
  // The list of licenses that matched the given query.
  repeated EnterpriseSubscriptionLicense licenses = 2;
}
